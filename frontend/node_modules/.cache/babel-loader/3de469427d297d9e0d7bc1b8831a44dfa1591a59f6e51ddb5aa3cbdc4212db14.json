{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/font_system/frontend/src/FontGroupForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FontGroupForm = ({\n  fonts,\n  handleGroupSubmit\n}) => {\n  _s();\n  const [groupName, setGroupName] = useState('');\n  const [fontGroup, setFontGroup] = useState([{\n    font: ''\n  }]);\n\n  // Add a new dropdown for font selection\n  const addRow = () => {\n    setFontGroup([...fontGroup, {\n      font: ''\n    }]);\n  };\n\n  // Update the font selection for each row\n  const handleFontChange = (index, e) => {\n    const newFontGroup = [...fontGroup];\n    newFontGroup[index].font = e.target.value;\n    setFontGroup(newFontGroup);\n  };\n\n  // Handle form submission\n  const onSubmit = () => {\n    const selectedFonts = fontGroup.map(row => row.font).filter(font => font);\n    handleGroupSubmit(groupName, selectedFonts);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Create Font Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Group Name\",\n      value: groupName,\n      onChange: e => setGroupName(e.target.value),\n      className: \"form-control mb-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), fontGroup.map((row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2 d-flex\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select\",\n        value: row.font,\n        onChange: e => handleFontChange(index, e),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Font\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), fonts.map(font => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: font.id,\n          children: font.font_name\n        }, font.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addRow,\n      className: \"btn btn-primary mb-3\",\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSubmit,\n      className: \"btn btn-success\",\n      children: \"Submit Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(FontGroupForm, \"cD1TTip5myzF24DTcC6z+TGjTjo=\");\n_c = FontGroupForm;\nexport default FontGroupForm;\nvar _c;\n$RefreshReg$(_c, \"FontGroupForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FontGroupForm","fonts","handleGroupSubmit","_s","groupName","setGroupName","fontGroup","setFontGroup","font","addRow","handleFontChange","index","e","newFontGroup","target","value","onSubmit","selectedFonts","map","row","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","id","font_name","onClick","_c","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/font_system/frontend/src/FontGroupForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst FontGroupForm = ({ fonts, handleGroupSubmit }) => {\n    const [groupName, setGroupName] = useState('');\n    const [fontGroup, setFontGroup] = useState([{ font: '' }]);\n\n    // Add a new dropdown for font selection\n    const addRow = () => {\n        setFontGroup([...fontGroup, { font: '' }]);\n    };\n\n    // Update the font selection for each row\n    const handleFontChange = (index, e) => {\n        const newFontGroup = [...fontGroup];\n        newFontGroup[index].font = e.target.value;\n        setFontGroup(newFontGroup);\n    };\n\n    // Handle form submission\n    const onSubmit = () => {\n        const selectedFonts = fontGroup.map((row) => row.font).filter((font) => font);\n        handleGroupSubmit(groupName, selectedFonts);\n    };\n\n    return (\n        <div className=\"mb-3\">\n            <h4>Create Font Group</h4>\n            \n            <input \n                type=\"text\" \n                placeholder=\"Group Name\" \n                value={groupName}\n                onChange={(e) => setGroupName(e.target.value)} \n                className=\"form-control mb-3\"\n            />\n\n            {/* Render font selection dropdowns */}\n            {fontGroup.map((row, index) => (\n                <div key={index} className=\"mb-2 d-flex\">\n                    <select \n                        className=\"form-select\" \n                        value={row.font}\n                        onChange={(e) => handleFontChange(index, e)}\n                    >\n                        <option value=\"\">Select Font</option>\n                        {fonts.map((font) => (\n                            <option key={font.id} value={font.id}>\n                                {font.font_name}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            ))}\n\n            {/* Add Row button */}\n            <button onClick={addRow} className=\"btn btn-primary mb-3\">Add Row</button>\n\n            {/* Submit Group button */}\n            <button onClick={onSubmit} className=\"btn btn-success\">Submit Group</button>\n        </div>\n    );\n};\n\nexport default FontGroupForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}