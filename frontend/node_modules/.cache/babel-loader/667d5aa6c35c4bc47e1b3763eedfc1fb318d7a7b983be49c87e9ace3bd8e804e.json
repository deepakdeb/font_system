{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/font_system/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FontUpload from './FontUpload';\nimport FontGroupForm from './FontGroupForm';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [fonts, setFonts] = useState([]);\n  const [groups, setGroups] = useState([]);\n  useEffect(() => {\n    fetchFonts();\n    fetchGroups();\n  }, []);\n  const base_url = 'http://localhost/font_system/backend/';\n  const fetchFonts = async () => {\n    const response = await fetch('http://localhost/font_system/backend/index.php?action=getFonts');\n    const data = await response.json();\n    setFonts(data);\n  };\n  const fetchGroups = async () => {\n    const response = await fetch('http://localhost/font_system/backend/index.php?action=getGroups');\n    const data = await response.json();\n    setGroups(data);\n  };\n  const handleUpload = async file => {\n    const formData = new FormData();\n    formData.append('font', file);\n    const response = await fetch('http://localhost/font_system/backend/index.php', {\n      method: 'POST',\n      body: formData\n    });\n    const data = await response.json();\n    if (data.status === 'success') {\n      fetchFonts();\n    }\n  };\n  const handleGroupSubmit = async (groupName, fontIds) => {\n    const formData = new FormData();\n    formData.append('groupName', groupName);\n    formData.append('fontIds', fontIds);\n    const response = await fetch('http://localhost/font_system/backend/index.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        groupName,\n        fontIds\n      })\n    });\n    const data = await response.json();\n    if (data.status === 'success') {\n      fetchGroups();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Font Group System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FontUpload, {\n      handleUpload: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FontGroupForm, {\n      fonts: fonts,\n      handleGroupSubmit: handleGroupSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Font Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: groups.map((group, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [group.group_name, \": \", group.fonts]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"sgosT0qGqxf+E51m5J4aP6PigyU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FontUpload","FontGroupForm","jsxDEV","_jsxDEV","App","_s","fonts","setFonts","groups","setGroups","fetchFonts","fetchGroups","base_url","response","fetch","data","json","handleUpload","file","formData","FormData","append","method","body","status","handleGroupSubmit","groupName","fontIds","headers","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","group","index","group_name","_c","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/font_system/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FontUpload from './FontUpload';\nimport FontGroupForm from './FontGroupForm';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => {\n    const [fonts, setFonts] = useState([]);\n    const [groups, setGroups] = useState([]);\n\n    useEffect(() => {\n        fetchFonts();\n        fetchGroups();\n    }, []);\n\n    const base_url = 'http://localhost/font_system/backend/';\n\n    const fetchFonts = async () => {\n        const response = await fetch('http://localhost/font_system/backend/index.php?action=getFonts');\n        const data = await response.json();\n        setFonts(data);\n    };\n\n    const fetchGroups = async () => {\n        const response = await fetch('http://localhost/font_system/backend/index.php?action=getGroups');\n        const data = await response.json();\n        setGroups(data);\n    };\n\n    const handleUpload = async (file) => {\n        const formData = new FormData();\n        formData.append('font', file);\n\n        const response = await fetch('http://localhost/font_system/backend/index.php', {\n            method: 'POST',\n            body: formData,\n        });\n\n        const data = await response.json();\n        if (data.status === 'success') {\n            fetchFonts();\n        }\n    };\n\n    const handleGroupSubmit = async (groupName, fontIds) => {\n        const formData = new FormData();\n        formData.append('groupName', groupName);\n        formData.append('fontIds', fontIds);\n        const response = await fetch('http://localhost/font_system/backend/index.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ groupName, fontIds }),\n        });\n\n        const data = await response.json();\n        if (data.status === 'success') {\n            fetchGroups();\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <h1>Font Group System</h1>\n            <FontUpload handleUpload={handleUpload} />\n            <FontGroupForm fonts={fonts} handleGroupSubmit={handleGroupSubmit} />\n            <h4>Font Groups</h4>\n            <ul>\n                {groups.map((group, index) => (\n                    <li key={index}>\n                        {group.group_name}: {group.fonts}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZW,UAAU,CAAC,CAAC;IACZC,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,QAAQ,GAAG,uCAAuC;EAExD,MAAMF,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAgE,CAAC;IAC9F,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCT,QAAQ,CAACQ,IAAI,CAAC;EAClB,CAAC;EAED,MAAMJ,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAiE,CAAC;IAC/F,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCP,SAAS,CAACM,IAAI,CAAC;EACnB,CAAC;EAED,MAAME,YAAY,GAAG,MAAOC,IAAI,IAAK;IACjC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAE7B,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAgD,EAAE;MAC3EQ,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEJ;IACV,CAAC,CAAC;IAEF,MAAMJ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,IAAID,IAAI,CAACS,MAAM,KAAK,SAAS,EAAE;MAC3Bd,UAAU,CAAC,CAAC;IAChB;EACJ,CAAC;EAED,MAAMe,iBAAiB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,OAAO,KAAK;IACpD,MAAMR,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEK,SAAS,CAAC;IACvCP,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEM,OAAO,CAAC;IACnC,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAgD,EAAE;MAC3EQ,MAAM,EAAE,MAAM;MACdM,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDL,IAAI,EAAEM,IAAI,CAACC,SAAS,CAAC;QAAEJ,SAAS;QAAEC;MAAQ,CAAC;IAC/C,CAAC,CAAC;IAEF,MAAMZ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,IAAID,IAAI,CAACS,MAAM,KAAK,SAAS,EAAE;MAC3Bb,WAAW,CAAC,CAAC;IACjB;EACJ,CAAC;EAED,oBACIR,OAAA;IAAK4B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtB7B,OAAA;MAAA6B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BjC,OAAA,CAACH,UAAU;MAACiB,YAAY,EAAEA;IAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1CjC,OAAA,CAACF,aAAa;MAACK,KAAK,EAAEA,KAAM;MAACmB,iBAAiB,EAAEA;IAAkB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrEjC,OAAA;MAAA6B,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBjC,OAAA;MAAA6B,QAAA,EACKxB,MAAM,CAAC6B,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrBpC,OAAA;QAAA6B,QAAA,GACKM,KAAK,CAACE,UAAU,EAAC,IAAE,EAACF,KAAK,CAAChC,KAAK;MAAA,GAD3BiC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAC/B,EAAA,CAvEID,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AAyET,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}