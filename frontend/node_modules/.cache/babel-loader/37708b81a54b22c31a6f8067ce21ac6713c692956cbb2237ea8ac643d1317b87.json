{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/font_system/frontend/src/FontGroupForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FontGroupForm = ({\n  fonts,\n  handleGroupSubmit\n}) => {\n  _s();\n  const [groupName, setGroupName] = useState('');\n  const [fontGroup, setFontGroup] = useState([{\n    font: '',\n    fontTitle: ''\n  }]);\n  const [errors, setErrors] = useState({});\n  const [backendError, setBackendError] = useState(''); // For backend errors\n\n  // Reset the form\n  const resetForm = () => {\n    setGroupName('');\n    setFontGroup([{\n      font: '',\n      fontTitle: ''\n    }]);\n    setErrors({});\n    setBackendError(''); // Clear backend error\n  };\n\n  // Add a new dropdown for font selection with font title\n  const addRow = () => {\n    setFontGroup([...fontGroup, {\n      font: '',\n      fontTitle: ''\n    }]);\n  };\n\n  // Update the font selection and font title for each row\n  const handleFontChange = (index, e) => {\n    const newFontGroup = [...fontGroup];\n    newFontGroup[index].font = e.target.value;\n    setFontGroup(newFontGroup);\n  };\n  const handleFontTitleChange = (index, e) => {\n    const newFontGroup = [...fontGroup];\n    newFontGroup[index].fontTitle = e.target.value;\n    setFontGroup(newFontGroup);\n  };\n\n  // Remove a row\n  const removeRow = index => {\n    const newFontGroup = [...fontGroup];\n    newFontGroup.splice(index, 1);\n    setFontGroup(newFontGroup);\n  };\n\n  // Validate the form before submission\n  const validateForm = () => {\n    let formErrors = {};\n\n    // Validate group name\n    if (!groupName.trim()) {\n      formErrors.groupName = 'Group name is required.';\n    }\n\n    // Validate font selection\n    const selectedFonts = fontGroup.filter(row => row.font && row.fontTitle);\n    if (selectedFonts.length < 2) {\n      formErrors.fontGroup = 'Please select at least two fonts and provide their titles.';\n    }\n\n    // // Validate unique fonts (no duplicate fonts allowed)\n    // const fontIds = selectedFonts.map((row) => row.font);\n    // const hasDuplicateFonts = new Set(fontIds).size !== fontIds.length;\n    // if (hasDuplicateFonts) {\n    //     formErrors.fontGroup = 'Each font can only be added once per group.';\n    // }\n\n    setErrors(formErrors);\n    return Object.keys(formErrors).length === 0; // Return true if no errors\n  };\n\n  // Handle form submission\n  const onSubmit = async () => {\n    if (validateForm()) {\n      const selectedFonts = fontGroup.filter(row => row.font && row.fontTitle);\n\n      // Call handleGroupSubmit and handle backend validation\n      const result = await handleGroupSubmit(groupName, selectedFonts);\n      console.log(result);\n      if (result.status === 'error') {\n        setBackendError(result.message); // Display backend error\n      } else {\n        resetForm(); // Reset form on successful submission\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Create Font Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Group Name\",\n      value: groupName,\n      onChange: e => setGroupName(e.target.value),\n      className: \"form-control mb-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), errors.groupName && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-danger\",\n      children: errors.groupName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 34\n    }, this), fontGroup.map((row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2 d-flex align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select me-2\",\n        value: row.font,\n        onChange: e => handleFontChange(index, e),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Font\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), fonts.map(font => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: font.id,\n          children: font.file_name\n        }, font.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Font Title\",\n        value: row.fontTitle,\n        onChange: e => handleFontTitleChange(index, e),\n        className: \"form-control me-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this), index > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeRow(index),\n        className: \"btn btn-danger\",\n        children: \"Delete Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this)), errors.fontGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-danger\",\n      children: errors.fontGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 34\n    }, this), backendError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-danger\",\n      children: backendError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addRow,\n      className: \"btn btn-primary mb-3\",\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSubmit,\n      className: \"btn btn-success\",\n      children: \"Submit Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(FontGroupForm, \"HMRGOj1uESnsQVAeybMgXzLGhg8=\");\n_c = FontGroupForm;\nexport default FontGroupForm;\nvar _c;\n$RefreshReg$(_c, \"FontGroupForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FontGroupForm","fonts","handleGroupSubmit","_s","groupName","setGroupName","fontGroup","setFontGroup","font","fontTitle","errors","setErrors","backendError","setBackendError","resetForm","addRow","handleFontChange","index","e","newFontGroup","target","value","handleFontTitleChange","removeRow","splice","validateForm","formErrors","trim","selectedFonts","filter","row","length","Object","keys","onSubmit","result","console","log","status","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","id","file_name","onClick","_c","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/font_system/frontend/src/FontGroupForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst FontGroupForm = ({ fonts, handleGroupSubmit }) => {\n    const [groupName, setGroupName] = useState('');\n    const [fontGroup, setFontGroup] = useState([{ font: '', fontTitle: '' }]);\n    const [errors, setErrors] = useState({});\n    const [backendError, setBackendError] = useState('');  // For backend errors\n\n    // Reset the form\n    const resetForm = () => {\n        setGroupName('');\n        setFontGroup([{ font: '', fontTitle: '' }]);\n        setErrors({});\n        setBackendError('');  // Clear backend error\n    };\n\n    // Add a new dropdown for font selection with font title\n    const addRow = () => {\n        setFontGroup([...fontGroup, { font: '', fontTitle: '' }]);\n    };\n\n    // Update the font selection and font title for each row\n    const handleFontChange = (index, e) => {\n        const newFontGroup = [...fontGroup];\n        newFontGroup[index].font = e.target.value;\n        setFontGroup(newFontGroup);\n    };\n\n    const handleFontTitleChange = (index, e) => {\n        const newFontGroup = [...fontGroup];\n        newFontGroup[index].fontTitle = e.target.value;\n        setFontGroup(newFontGroup);\n    };\n\n    // Remove a row\n    const removeRow = (index) => {\n        const newFontGroup = [...fontGroup];\n        newFontGroup.splice(index, 1);\n        setFontGroup(newFontGroup);\n    };\n\n    // Validate the form before submission\n    const validateForm = () => {\n        let formErrors = {};\n\n        // Validate group name\n        if (!groupName.trim()) {\n            formErrors.groupName = 'Group name is required.';\n        }\n\n        // Validate font selection\n        const selectedFonts = fontGroup.filter((row) => row.font && row.fontTitle);\n        if (selectedFonts.length < 2) {\n            formErrors.fontGroup = 'Please select at least two fonts and provide their titles.';\n        }\n\n        // // Validate unique fonts (no duplicate fonts allowed)\n        // const fontIds = selectedFonts.map((row) => row.font);\n        // const hasDuplicateFonts = new Set(fontIds).size !== fontIds.length;\n        // if (hasDuplicateFonts) {\n        //     formErrors.fontGroup = 'Each font can only be added once per group.';\n        // }\n\n        setErrors(formErrors);\n        return Object.keys(formErrors).length === 0;  // Return true if no errors\n    };\n\n    // Handle form submission\n    const onSubmit = async () => {\n        if (validateForm()) {\n            const selectedFonts = fontGroup.filter((row) => row.font && row.fontTitle);\n\n            // Call handleGroupSubmit and handle backend validation\n            const result = await handleGroupSubmit(groupName, selectedFonts);\n\n            console.log(result)\n\n            if (result.status === 'error') {\n                setBackendError(result.message);  // Display backend error\n            } else {\n                resetForm();  // Reset form on successful submission\n            }\n        }\n    };\n\n    return (\n        <div className=\"mb-3\">\n            <h4>Create Font Group</h4>\n\n            {/* Group Name */}\n            <input\n                type=\"text\"\n                placeholder=\"Group Name\"\n                value={groupName}\n                onChange={(e) => setGroupName(e.target.value)}\n                className=\"form-control mb-3\"\n            />\n            {errors.groupName && <div className=\"text-danger\">{errors.groupName}</div>}\n\n            {/* Render font selection dropdowns with font title input */}\n            {fontGroup.map((row, index) => (\n                <div key={index} className=\"mb-2 d-flex align-items-center\">\n                    {/* Font selection dropdown */}\n                    <select\n                        className=\"form-select me-2\"\n                        value={row.font}\n                        onChange={(e) => handleFontChange(index, e)}\n                    >\n                        <option value=\"\">Select Font</option>\n                        {fonts.map((font) => (\n                            <option key={font.id} value={font.id}>\n                                {font.file_name}\n                            </option>\n                        ))}\n                    </select>\n\n                    {/* Font title input */}\n                    <input\n                        type=\"text\"\n                        placeholder=\"Font Title\"\n                        value={row.fontTitle}\n                        onChange={(e) => handleFontTitleChange(index, e)}\n                        className=\"form-control me-2\"\n                    />\n\n                    {/* Delete Row button */}\n                    {index > 0 && (\n                        <button onClick={() => removeRow(index)} className=\"btn btn-danger\">\n                            Delete Row\n                        </button>\n                    )}\n                </div>\n            ))}\n\n            {errors.fontGroup && <div className=\"text-danger\">{errors.fontGroup}</div>}\n            {backendError && <div className=\"text-danger\">{backendError}</div>}\n\n            {/* Add Row button */}\n            <button onClick={addRow} className=\"btn btn-primary mb-3\">Add Row</button>\n\n            {/* Submit Group button */}\n            <button onClick={onSubmit} className=\"btn btn-success\">Submit Group</button>\n        </div>\n    );\n};\n\nexport default FontGroupForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}